{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conqu\\\\Desktop\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"text-1\",\n    day: '11/12/2000',\n    reminder: true\n  }, {\n    id: 2,\n    text: \"text-2\",\n    day: '19/05/1996',\n    reminder: false\n  }]); //Add task\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; //Delete task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }, this) : 'No task to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"SGARpuaHtmkO9ZJFyYyJXaSq51s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/conqu/Desktop/my-app/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","id","text","day","reminder","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAG,GAAE,MAAM;AAAA;;AACf,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+BN,QAAQ,CAAC,KAAD,CAA7C;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CACjC;AACES,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,GAAG,EAAC,YAHN;AAIEC,IAAAA,QAAQ,EAAC;AAJX,GADiC,EAOjC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,GAAG,EAAC,YAHN;AAIEC,IAAAA,QAAQ,EAAC;AAJX,GAPiC,CAAD,CAAlC,CAHe,CAkBjB;;AACA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAML,EAAE,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAmC,CAA9C;AACA,UAAMC,OAAO,GAAG;AAACT,MAAAA,EAAD;AAAK,SAAGK;AAAR,KAAhB;AACAN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUW,OAAV,CAAD,CAAR;AACD,GAJD,CAnBiB,CAyBjB;;;AACA,QAAMC,UAAU,GAAIV,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACa,MAAN,CAAcN,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CA1BiB,CA8BjB;;;AACA,QAAMY,cAAc,GAAIZ,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CAACD,KAAK,CAACe,GAAN,CAAWR,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGK,IAAJ;AAASF,MAAAA,QAAQ,EAAE,CAACE,IAAI,CAACF;AAAzB,KAAjB,GAAsDE,IAA1E,CAAD,CAAR;AACD,GAFD;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMR,cAAc,CAAC,CAACD,WAAF;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEQ;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAIGN,KAAK,CAACgB,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AAAqB,MAAA,QAAQ,EAAEY,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAAnB,GAA4F,iBAJ/F;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3CD;;GAAMjB,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from \"./components/AddTask\";\n\nconst App= () => {\n  const [showAddTask,setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"text-1\",\n      day:'11/12/2000',\n      reminder:true,\n    },\n    {\n      id: 2,\n      text: \"text-2\",\n      day:'19/05/1996',\n      reminder:false,\n    },\n  ])\n\n//Add task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) +1\n  const newTask = {id, ...task }\n  setTasks([...tasks,newTask])\n}\n\n//Delete task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? {...task,reminder: !task.reminder} : task))\n}\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No task to show'}\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}